{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortAlpha","setState","sortLength","goodsReverse","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAgBzB,OAdIC,IAAaJ,EAASO,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACnCN,IAAaJ,EAASY,QAC/BN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGvCR,GACFC,EAAaQ,UAKfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAjCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,UAAY,WACV,EAAKC,SAAS,CAAEjB,SAAUJ,EAASO,YAPvC,EAUEe,WAAa,WACX,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEW,aAAe,WACb,EAAKF,UAAS,SAAAH,GACZ,MAAO,CACLb,YAAaa,EAAMb,gBAjB3B,EAsBEmB,MAAQ,WACN,EAAKH,SAAS,CACZjB,SAAUJ,EAASmB,KACnBd,YAAY,KAzBlB,4CA6BE,WACE,MAAiCoB,KAAKP,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWtB,IAAaJ,EAASO,SAC7B,iBACA,0BACJqB,QAASH,KAAKL,UALhB,iCAUA,wBACEO,KAAK,SACLD,UAAWtB,IAAaJ,EAASY,OAC7B,iBACA,0BACJgB,QAASH,KAAKH,WALhB,4BAUA,wBACEK,KAAK,SACLD,WAA0B,IAAfrB,EACP,iBACA,0BACJuB,QAASH,KAAKF,aALhB,sBASEnB,IAAaJ,EAASmB,OAAuB,IAAfd,IAE3B,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,MAHhB,sBAWP,6BACE,6BACGtB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CwB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBAjFzB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc1dae7b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlpha = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  goodsReverse = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortAlpha}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed === true\n              ? 'button is-info'\n              : 'button is-info is-light'}\n            onClick={this.goodsReverse}\n          >\n            Reverse\n          </button>\n          {(sortType !== SortType.NONE || isReversed === true)\n             && (\n               <button\n                 type=\"button\"\n                 className=\"button is-danger is-light\"\n                 onClick={this.reset}\n               >\n                 Reset\n               </button>\n             )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => (\n                <li key={good} data-cy=\"Good\">{good}</li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}